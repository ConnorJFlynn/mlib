%%

C1_Lang = ancload;
C1_aod = ancload;
E13_Lang = ancload;
E13_aod = ancload;
%%
%Get the good Langley times
C1_good = find(C1_Lang.vars.barnard_badflag_filter2.data==0);
E13_good = find(E13_Lang.vars.barnard_badflag_filter2.data==0);
for i = length(C1_good):-1:1
    E13_day = find(E13_Lang.time(E13_good)>(C1_Lang.time(C1_good(i))-1/24) & ...
        E13_Lang.time(E13_good)<(C1_Lang.time(C1_good(i))+1/24));
    if isempty(E13_day)
        C1_good(i) = [];
    end
end
for i = length(E13_good):-1:1
    C1_day = find(C1_Lang.time(C1_good)>(E13_Lang.time(E13_good(i))-1/24) & ...
        C1_Lang.time(C1_good)<(E13_Lang.time(E13_good(i))+1/24));
    if isempty(C1_day)
        E13_good(i) = [];
    end
end

%%
flag = find(C1_Lang.vars.barnard_badflag_filter2.data==0);
flag = flag(1:2);
%mflag = find(C1_Lang.vars.michalsky_badflag_filter2.data==0);
figure; semilogy(log([415, 500, 615, 673, 870]), ...
    [C1_Lang.vars.barnard_optical_depth_filter1.data(flag)', ...
    C1_Lang.vars.barnard_optical_depth_filter2.data(flag)', ...
    C1_Lang.vars.barnard_optical_depth_filter3.data(flag)', ...
    C1_Lang.vars.barnard_optical_depth_filter4.data(flag)',...
    C1_Lang.vars.barnard_optical_depth_filter5.data(flag)'],'.-');
hold;
semilogy(log([415, 500, 615, 673, 870]), ...
    [C1_Lang.vars.michalsky_optical_depth_filter1.data(flag)', ...
    C1_Lang.vars.michalsky_optical_depth_filter2.data(flag)', ...
    C1_Lang.vars.michalsky_optical_depth_filter3.data(flag)', ...
    C1_Lang.vars.michalsky_optical_depth_filter4.data(flag)', ...
    C1_Lang.vars.michalsky_optical_depth_filter5.data(flag)'],'x:');
%%

for b = C1_good % for each good Barnard Langley for C1,
    %find and plot the AOT for that airmass sequence.

%     bb = 1;
%     b = C1_good(bb);

    % Identify time period of good Langley
    [zen_angle, az_angle, r_au, hour_angle, inc_angle, sunrise, suntransit, sunset] = spa(C1_Lang.vars.lat.data, C1_Lang.vars.lon.data, C1_Lang.vars.alt.data, C1_Lang.time(b));
    if sunrise > suntransit
        sunrise = sunrise - 24;
    end
    if sunset < suntransit
        sunset = sunset + 24;
    end
    sunrise = floor(C1_Lang.time(b))+sunrise/24;
    suntransit = floor(C1_Lang.time(b))+suntransit/24;
    sunset = floor(C1_Lang.time(b))+sunset/24;
    if (C1_Lang.time(b)<suntransit) %Then plot the morning results
        C1_aod_time = find(C1_aod.time>(sunrise)&C1_aod.time<(suntransit)&(C1_aod.vars.airmass.data<5.5));
        E13_aod_time = find(E13_aod.time>(sunrise)&E13_aod.time<(suntransit)&(E13_aod.vars.airmass.data<5.5));
    else
        C1_aod_time = find(C1_aod.time>(suntransit)&C1_aod.time<(sunset)&(C1_aod.vars.airmass.data<5.5));
        E13_aod_time = find(E13_aod.time>(suntransit)&E13_aod.time<(sunset)&(E13_aod.vars.airmass.data<5.5));
    end


    %Select applicable C1 data
    [aero, eps] = alex_screen(C1_aod.time(C1_aod_time), C1_aod.vars.total_optical_depth_filter2.data(C1_aod_time));
    C1 = C1_aod_time(find(aero==1));
    [aero, eps] = alex_screen(E13_aod.time(E13_aod_time), E13_aod.vars.total_optical_depth_filter2.data(E13_aod_time));
    E13 = E13_aod_time(find(aero==1));

    figure; subplot(2,1,1);
    plot(serial2Hh(C1_aod.time(C1)), ...
        [C1_aod.vars.aerosol_optical_depth_filter1.data(C1)', ...
        C1_aod.vars.aerosol_optical_depth_filter2.data(C1)', ...
        C1_aod.vars.aerosol_optical_depth_filter3.data(C1)', ...
        C1_aod.vars.aerosol_optical_depth_filter4.data(C1)', ...
        C1_aod.vars.aerosol_optical_depth_filter5.data(C1)'], '.');
    hold on
    plot(serial2Hh(E13_aod.time(E13)), ...
        [E13_aod.vars.aerosol_optical_depth_filter1.data(E13)', ...
        E13_aod.vars.aerosol_optical_depth_filter2.data(E13)', ...
        E13_aod.vars.aerosol_optical_depth_filter3.data(E13)', ...
        E13_aod.vars.aerosol_optical_depth_filter4.data(E13)', ...
        E13_aod.vars.aerosol_optical_depth_filter5.data(E13)'], ...
        '-');
    title(['AOD comparison MFRSR C1 & E13: ', datestr(floor(C1_Lang.time(b)))])
    ylabel('aerosol optical depth');
    legend('415', '500','615','673','870')

    subplot(2,1,2);
    plot(serial2Hh(C1_aod.time(C1)), ...
        [C1_aod.vars.angstrom_exponent.data(C1)], '.', ...
        serial2Hh(E13_aod.time(E13)), ...
        [E13_aod.vars.angstrom_exponent.data(E13)],'-');
    legend('C1', 'E13');          
    xlabel('time (UTC)');
    ylabel('angstrom exponent');
    
figure; 
    semilogy(log([415, 500, 615, 673, 870]), ...
        [C1_aod.vars.aerosol_optical_depth_filter1.data([C1(1):ceil(length(C1)/6):C1(end)])',...
        C1_aod.vars.aerosol_optical_depth_filter2.data([C1(1):ceil(length(C1)/6):C1(end)])',...
        C1_aod.vars.aerosol_optical_depth_filter3.data([C1(1):ceil(length(C1)/6):C1(end)])',...
        C1_aod.vars.aerosol_optical_depth_filter4.data([C1(1):ceil(length(C1)/6):C1(end)])',...
        C1_aod.vars.aerosol_optical_depth_filter5.data([C1(1):ceil(length(C1)/6):C1(end)])'],'o-')
hold on;    
    semilogy(log([415, 500, 615, 673, 870]), ...
        2.0*[E13_aod.vars.aerosol_optical_depth_filter1.data([E13(1):ceil(length(E13)/6):E13(end)])',...
        E13_aod.vars.aerosol_optical_depth_filter2.data([E13(1):ceil(length(E13)/6):E13(end)])',...
        E13_aod.vars.aerosol_optical_depth_filter3.data([E13(1):ceil(length(E13)/6):E13(end)])',...
        E13_aod.vars.aerosol_optical_depth_filter4.data([E13(1):ceil(length(E13)/6):E13(end)])',...
        E13_aod.vars.aerosol_optical_depth_filter5.data([E13(1):ceil(length(E13)/6):E13(end)])'],'x:')
        
   title(['MFRSR C1 & E13 log-log comparison: ', datestr((C1_Lang.time(b)),1)])
    xlabel('log(wavelength)')
    ylabel('log(aot)');
    legend('C1')
    
%     subplot(3,1,3);
%     semilogy(log([415, 500, 615, 673, 870]), ...
%         [C1_Lang.vars.barnard_optical_depth_filter1.data(b)', ...
%         C1_Lang.vars.barnard_optical_depth_filter2.data(b)', ...
%         C1_Lang.vars.barnard_optical_depth_filter3.data(b)', ...
%         C1_Lang.vars.barnard_optical_depth_filter4.data(b)',...
%         C1_Lang.vars.barnard_optical_depth_filter5.data(b)'],'o-');
%     hold on;
%     semilogy(log([415, 500, 615, 673, 870]), ...
%         [E13_Lang.vars.barnard_optical_depth_filter1.data(b)', ...
%         E13_Lang.vars.barnard_optical_depth_filter2.data(b)', ...
%         E13_Lang.vars.barnard_optical_depth_filter3.data(b)', ...
%         E13_Lang.vars.barnard_optical_depth_filter4.data(b)',...
%         E13_Lang.vars.barnard_optical_depth_filter5.data(b)'],'x:');
%     pause
    %close('all')
end
%%
