function [dtc_cts, status] = dtc_apd8123(raw_cts, method);
%dtc_cts, status] = dtc_test(raw_cts, method);
% dtc_cts and raw_cts in MHz
% method is numeric 1-5 as below.  
% status if successful is returned as the value of method, else as -1
% Testing for SPCM-AQR-FC 10443 used in PARSL Lidar copol during MPACE
%Method 1: D vs R
%Method 2: D vs Corr
%Method 3: logD vs logR
%Method 4: logD vs logCorr
%Method 5: logD vs Corr


if nargin < 2
   method = 5;
end

dtc_cts = raw_cts;

if method==1 %detected vs real, no logs
% /*--------------------------------------------------------------*/
% long double eqn6068(long double x)
% /*--------------------------------------------------------------*
%    TableCurve Function: C:\\TableCurve2Dv5.01\\dtc_test.c Oct 13, 2004 5:06:00 PM 
%    C:\\TableCurve2Dv5.01\\CLIPBRD.WK1 
%    X= Detected (MHz) 
%    Y= Real (MHz) 
%    Eqn# 6068  High Precision Polynomial Order 18 
%    r2=0.9999999999970849 
%    r2adj=0.999999999944613 
%    StdErr=0.0001677253509908098 
%    Fstat=19057821096.41688 
%    a= 0.0001504482515815061 
%    b= 0.9861322066186235 
%    c= 0.3675512542165985 
%    d= -1.883045294371702 
%    e= 5.629494831831709 
%    f= -9.160942952267171 
%    g= 9.207283212260359 
%    h= -6.180228874559943 
%    i= 2.912400287773099 
%    j= -0.9951377069199143 
%    k= 0.2515598011706109 
%    l= -0.04755717577782942 
%    m= 0.006741438915911198 
%    n= -0.0007124789608196017 
%    o= 5.525910931391426E-05 
%    p= -3.051005394674152E-06 
%    q= 1.134316499224538E-07 
%    r= -2.543811688405623E-09 
%    s= 2.59837415975603E-11 
%  *--------------------------------------------------------------*/
% {
%   long double y;
%   y=0.0001504482515815060896+x*(0.9861322066186234786+
%     x*(0.3675512542165984996+x*(-1.883045294371702135+
%     x*(5.629494831831709359+x*(-9.160942952267170948+
%     x*(9.207283212260359284+x*(-6.180228874559943032+
%     x*(2.912400287773099069+x*(-0.9951377069199143213+
%     x*(0.2515598011706108763+x*(-0.04755717577782941905+
%     x*(0.006741438915911197526+x*(-0.0007124789608196017092+
%     x*(5.525910931391425822E-05+x*(-3.051005394674152092E-06+
%     x*(1.134316499224537502E-07+x*(-2.543811688405623270E-09+
%     x*2.598374159756030185E-11)))))))))))))))));
%   return(y);
% }
   a= 0.0001504482515815061 ;
   b= 0.9861322066186235 ;
   c= 0.3675512542165985 ;
   d= -1.883045294371702 ;
   e= 5.629494831831709 ;
   f= -9.160942952267171 ;
   g= 9.207283212260359 ;
   h= -6.180228874559943 ;
   i= 2.912400287773099 ;
   j= -0.9951377069199143; 
   k= 0.2515598011706109 ;
   l= -0.04755717577782942; 
   m= 0.006741438915911198 ;
   n= -0.0007124789608196017; 
   o= 5.525910931391426E-05 ;
   p= -3.051005394674152E-06 ;
   q= 1.134316499224538E-07 ;
   r= -2.543811688405623E-09 ;
   s= 2.59837415975603E-11 ;
  
   x = raw_cts;

   y=a + x .* (b + x .* (c + x .* (d + x .* (e + x .* (f + x .* (g + x .* (h + x .* (i + x .* (j + x .* (k + x .* (l + x .* (m + x .* (n + x .* (o + x .* (p + x .* (q + x .* (r + x .* s)))))))))))))))));

%We'll be dividing by x, so cull out zeros.
   dtc_cts = y;
   status = 1;
elseif method==2 % detected vs Corr
%    TableCurve Function: C:\\TableCurve2Dv5.01\\dtc_test_D_vs_dtc.c Oct 13, 2004 9:45:44 PM 
%    C:\\TableCurve2Dv5.01\\CLIPBRD.WK1 
%    X= (Detected MHz) 
%    Y= dtcf 
%    Eqn# 2086  y=a+bx+cx^3+de^x 
%    r2=0.9998703919512348 
%    r2adj=0.9998358298048974 
%    StdErr=0.01279177478192188 
%    Fstat=41144.37445212483 
%    a= 1.000328969619413 
%    b= 0.08558445601214964 
%    c= 0.0007301852692569832 
%    d= 2.167847066355083E-05 
%  *--------------------------------------------------------------*/
% {
%   long double y;
%   long double x1,x2,x3;
%   x1=x;
%   x2=x*x*x;
%   x3=expl(x);
%   y=1.0003289696194129977+0.08558445601214964216*x1
%     +0.0007301852692569832146*x2+2.167847066355083449E-05*x3;
    a= 1.000328969619413 ;
    b= 0.08558445601214964; 
    c= 0.0007301852692569832; 
    d= 2.167847066355083E-05 ;

    x = raw_cts;
%   x2=x*x*x;
%   x3=expl(x);
y= a + b .* x + c .* (x.^3) + d .* exp(x);
    
    good_y = find(y>1);
    corr = y(good_y);
    dtc_cts(good_y) = x(good_y).*corr;
   status = 2;


elseif method==3   %logD vs logR
   %We'll be taking a log so cull out all non-positive points
   pos = find(raw_cts>0);
   x=log10(raw_cts(pos));
   y = zeros(size(x));
%
% /*--------------------------------------------------------------*
%    TableCurve Function: C:\\TableCurve2Dv5.01\\dtc_test_logD_vs_logR.c Oct 13, 2004 5:21:21 PM 
%    C:\\TableCurve2Dv5.01\\CLIPBRD.WK1 
%    X= log Detected (MHz) 
%    Y= log Real (MHz) 
%    Eqn# 7905  y=(a+cx+ex^2+gx^3)/(1+bx+dx^2+fx^3) [NL] 
%    r2=0.9999927784672302 
%    r2adj=0.9999885659064478 
%    StdErr=0.004092812395682259 
%    Fstat=300026.4748603256 
%    a= 0.03545138344273335 
%    b= -1.23740177592508 
%    c= 1.040420144274678 
%    d= 0.3165287888162548 
%    e= -1.23848468895405 
%    f= 0.008252726368592956 
%    g= 0.292713404152347 
%  *--------------------------------------------------------------*/
% {
%   long double y;
%   y=(0.03545138344273334952+x*(1.040420144274677714+
%     x*(-1.238484688954049886+x*0.2927134041523469821)))/
%     (1.0+x*(-1.237401775925079653+x*(0.3165287888162548108+
%     x*0.008252726368592955737)));
     a= 0.03545138344273335; 
    b= -1.23740177592508 ;
    c= 1.040420144274678 ;
    d= 0.3165287888162548 ;
    e= -1.23848468895405 ;
    f= 0.008252726368592956; 
    g= 0.292713404152347 ;
   y=(0.03545138344273334952+x.*(1.040420144274677714+x.*(-1.238484688954049886+x.*0.2927134041523469821)))./(1.0+x.*(-1.237401775925079653+x.*(0.3165287888162548108+x.*0.008252726368592955737)));

    
dtc_cts(pos) = 10.^y;
   status = 3;

elseif method==4 %Log(Detected) vs Log(Corr)
   %We'll be dividing by x, so cull out zeros.
   pos = find(raw_cts>0);
   x=raw_cts(pos);
   y = ones(size(x));
%    /*--------------------------------------------------------------*/
% double eqn7904(double x)
% /*--------------------------------------------------------------*
%    TableCurve Function: .\CDEE.tmp May 26, 2004 11:44:45 PM 
%    APD 8123 
%    X= Detected_kHz 
%    Y= Correction 
%    Eqn# 7904  y=(a+cx+ex^2)/(1+bx+dx^2+fx^3) [NL] 
%    r2=0.9998641176855901 
%    r2adj=0.999801402771247 
%    StdErr=0.003602416946468443 
%    Fstat=20603.26644918325 
%    a= 0.03453907543609482 
%    b= -2.115093051703741 
%    c= 0.003721116170190245 
%    d= 1.820021249383748 
%    e= -0.003115912877993979 
%    f= -0.6329393675749334 
    
      a= 0.03453907543609482; 
   b= -2.115093051703741 ;
   c= 0.003721116170190245; 
   d= 1.820021249383748 ;
   e= -0.003115912877993979; 
   f= -0.6329393675749334 ;
   
    x = log10(x);
    y=(a+ c.*x + e.*(x.^2))./(1+ b.*x + d.* x.^2 +f .* x.^3);
    corr = 10.^y;
    x = 10.^x;
    dtc_cts(pos) = x.*corr;
   status = 4;

elseif method==5 %Log(detected) vs Corr
%We'll be dividing by x, so cull out zeros.
   pos = find(raw_cts>0);
   x=log10(raw_cts(pos));
   y = ones(size(x));
% 
%       TableCurve Function: C:\\TableCurve2Dv5.01\\dtc_test_logD_vs_dtc.c Oct 13, 2004 9:25:34 PM 
%    C:\\TableCurve2Dv5.01\\CLIPBRD.WK1 
%    X= log(Detected MHz) 
%    Y= dtcf 
%    Eqn# 7905  y=(a+cx+ex^2+gx^3)/(1+bx+dx^2+fx^3) [NL] 
%    r2=0.9998063621380954 
%    r2adj=0.9996934067186511 
%    StdErr=0.02660629699071705 
%    Fstat=11187.10512840479 
%    a= 1.085790200733894 
%    b= -0.8399756886829536 
%    c= -0.6948000150923847 
%    d= 0.576658292888996 
%    e= 0.7009682667422948 
%    f= -0.5509850466309875 
%    g= -0.517191232805132 
%  *--------------------------------------------------------------*/
% {
%   long double y;
%   y=(1.085790200733894240+x*(-0.6948000150923846838+
%     x*(0.7009682667422947864+x*-0.5171912328051319568)))/
%     (1.0+x*(-0.8399756886829536430+x*(0.5766582928889960087+
%     x*-0.5509850466309875181)));
%   return(y);
   
    a= 1.085790200733894 ;
    b= -0.8399756886829536 ;
    c= -0.6948000150923847; 
    d= 0.576658292888996 ;
    e= 0.7009682667422948 ;
    f= -0.5509850466309875 ;
    g= -0.517191232805132 ;;

    y=(a + x .* (c + x .* (e + x .* g))) ./ (1.0 + x .* (b + x .* (d + x .* f)));
    
    x = 10.^x;
    good_y = find(y>0);
    corr = y(good_y);
    dtc_cts(pos(good_y)) = x(good_y).*corr;
    status = 5;
 else
 status = -1
 disp(['Unknown or unspecified method.']);
end

return
